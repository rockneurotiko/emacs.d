from . import base
import logging



class Net(base.InLoopPollText):
    """
        Displays Wifi ssid and quality.
    """
    defaults = [
        ('interface', 'wlan0', 'The interface to monitor'),
        ('update_interval', 1, 'The update interval.'),
    ]
    def __init__(self, **config):
        base.InLoopPollText.__init__(self, **config)
        self.add_defaults(Net.defaults)
        self.interfaces = self.get_stats()

    def convert_b(self, b):
        letter = 'B'
        if b // 1024 > 0:
            b = b / 1024.0
            letter = 'KB'
        if b // 1024 > 0:
            b = b / 1024.0
            letter = 'MB'
        return b, letter

    def get_stats(self):
        lines =  [] # type: List[str]
        with open('/proc/net/dev', 'r') as f:
            lines = f.readlines()[2:]
        interfaces = {}
        for s in lines:
            int_s = s.split()
            name = int_s[0][:-1]
            down = float(int_s[1])
            up = float(int_s[-8])
            interfaces[int_s[0][:-1]] = {'down':down, 'up':up}
        return interfaces

    def poll(self):
        try:
            new_int = self.get_stats()
            down = new_int[self.interface]['down'] - self.interfaces[self.interface]['down']
            up = new_int[self.interface]['up'] - self.interfaces[self.interface]['up']

            down = down / self.update_interval
            up = up / self.update_interval
            down, down_letter = self.convert_b(down)
            up, up_letter = self.convert_b(up)

            down = round(down,2)
            up = round(up,2)

            self.interfaces = new_int
	    width = 19
            return "{}{} - {}{}".format(down,down_letter,up,up_letter, width)
        except Exception as e:
            logging.getLogger('qtile').error('%s: Probably your wlan device is switched off or otherwise not present in your system.',
			self.__class__.__name__, str(e))
